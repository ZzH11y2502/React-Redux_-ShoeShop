{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cybersoft\\\\FE\\\\React-Redux\\\\src\\\\Ex_Shoe_Redux\\\\ListShoe.js\";\nimport React, { Component } from \"react\";\nimport ItemShoe from \"./ItemShoe\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ListShoe extends Component {\n  render() {\n    var _this$props, _this$props$list;\n    const {\n      handleCart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$list = _this$props.list) === null || _this$props$list === void 0 ? void 0 : _this$props$list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemShoe, {\n          handleViewDetail: this.props.handleViewDetail,\n          handleCart: handleCart,\n          data: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// connect () () ~ 2 hàm hàm 2nd nhậm tham số của hàm 1st\nlet addToCart = shoe => {\n  var _this$state;\n  // spread operator\n  // const newCart = [...this.state.cart, shoe]\n\n  const newCart = (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.cart;\n\n  // Kiểm tra trong cart đã tồn tại sản phẩm hay chưa\n  const index = newCart.findIndex(value => value.id === shoe.id);\n  if (index !== -1) {\n    // sản phẩm đã có trong cart => chỉ thay đổi thuộc tính cartQuantity\n    newCart[index].cartQuantity += 1;\n  } else {\n    // sản phẩm chưa có trong cart => thêm vào cart\n    newCart.push({\n      ...shoe,\n      cartQuantity: 1\n    });\n  }\n\n  // console.log(\"newCart: \", newCart);\n\n  this.setState({\n    cart: newCart\n  });\n};\nlet mapStateToProps = state => {\n  return {\n    list: state.shoeReducer.shoeArr,\n    // root => initialState\n    addToCart: shoe => {\n      let action = {\n        type: \"ADD_TO_CART\",\n        payload: shoe\n      };\n    }\n  };\n};\nexport default connect(mapStateToProps)(ListShoe);","map":{"version":3,"names":["React","Component","ItemShoe","connect","jsxDEV","_jsxDEV","ListShoe","render","_this$props","_this$props$list","handleCart","props","className","children","list","map","item","index","handleViewDetail","data","fileName","_jsxFileName","lineNumber","columnNumber","addToCart","shoe","_this$state","newCart","state","cart","findIndex","value","id","cartQuantity","push","setState","mapStateToProps","shoeReducer","shoeArr","action","type","payload"],"sources":["D:/Cybersoft/FE/React-Redux/src/Ex_Shoe_Redux/ListShoe.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ItemShoe from \"./ItemShoe\";\nimport { connect } from \"react-redux\";\nclass ListShoe extends Component {\n  render() {\n    const { handleCart } = this.props;\n    return (\n      <div className=\"row\">\n        {this.props?.list?.map((item, index) => {\n          return (\n            <ItemShoe\n              handleViewDetail={this.props.handleViewDetail}\n              handleCart={handleCart}\n              key={index}\n              data={item}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// connect () () ~ 2 hàm hàm 2nd nhậm tham số của hàm 1st\nlet addToCart = (shoe) => {\n  // spread operator\n  // const newCart = [...this.state.cart, shoe]\n\n  const newCart = this.state?.cart;\n\n  // Kiểm tra trong cart đã tồn tại sản phẩm hay chưa\n  const index = newCart.findIndex((value) => value.id === shoe.id);\n\n  if (index !== -1) {\n    // sản phẩm đã có trong cart => chỉ thay đổi thuộc tính cartQuantity\n    newCart[index].cartQuantity += 1;\n  } else {\n    // sản phẩm chưa có trong cart => thêm vào cart\n    newCart.push({ ...shoe, cartQuantity: 1 });\n  }\n\n  // console.log(\"newCart: \", newCart);\n\n  this.setState({\n    cart: newCart,\n  });\n};\nlet mapStateToProps = (state) => {\n  return {\n    list: state.shoeReducer.shoeArr,\n    // root => initialState\n    addToCart: (shoe) => {\n      let action = {\n        type: \"ADD_TO_CART\",\n        payload: shoe,\n      };\n    },\n  };\n};\n\nexport default connect(mapStateToProps)(ListShoe);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAC/BM,MAAMA,CAAA,EAAG;IAAA,IAAAC,WAAA,EAAAC,gBAAA;IACP,MAAM;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACC,KAAK;IACjC,oBACEN,OAAA;MAAKO,SAAS,EAAC,KAAK;MAAAC,QAAA,GAAAL,WAAA,GACjB,IAAI,CAACG,KAAK,cAAAH,WAAA,wBAAAC,gBAAA,GAAVD,WAAA,CAAYM,IAAI,cAAAL,gBAAA,uBAAhBA,gBAAA,CAAkBM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACtC,oBACEZ,OAAA,CAACH,QAAQ;UACPgB,gBAAgB,EAAE,IAAI,CAACP,KAAK,CAACO,gBAAiB;UAC9CR,UAAU,EAAEA,UAAW;UAEvBS,IAAI,EAAEH;QAAK,GADNC,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAEA;AACA,IAAIC,SAAS,GAAIC,IAAI,IAAK;EAAA,IAAAC,WAAA;EACxB;EACA;;EAEA,MAAMC,OAAO,IAAAD,WAAA,GAAG,IAAI,CAACE,KAAK,cAAAF,WAAA,uBAAVA,WAAA,CAAYG,IAAI;;EAEhC;EACA,MAAMZ,KAAK,GAAGU,OAAO,CAACG,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKP,IAAI,CAACO,EAAE,CAAC;EAEhE,IAAIf,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB;IACAU,OAAO,CAACV,KAAK,CAAC,CAACgB,YAAY,IAAI,CAAC;EAClC,CAAC,MAAM;IACL;IACAN,OAAO,CAACO,IAAI,CAAC;MAAE,GAAGT,IAAI;MAAEQ,YAAY,EAAE;IAAE,CAAC,CAAC;EAC5C;;EAEA;;EAEA,IAAI,CAACE,QAAQ,CAAC;IACZN,IAAI,EAAEF;EACR,CAAC,CAAC;AACJ,CAAC;AACD,IAAIS,eAAe,GAAIR,KAAK,IAAK;EAC/B,OAAO;IACLd,IAAI,EAAEc,KAAK,CAACS,WAAW,CAACC,OAAO;IAC/B;IACAd,SAAS,EAAGC,IAAI,IAAK;MACnB,IAAIc,MAAM,GAAG;QACXC,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAEhB;MACX,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,eAAetB,OAAO,CAACiC,eAAe,CAAC,CAAC9B,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}